<UserControl x:Class="Lieferliste_WPF.Planning.MachineUserControl"
			 xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:const="clr-namespace:El2Core.Constants;assembly=El2Core"
			 DataContextChanged="UserControl_DataContextChanged"
			 xmlns:dd="urn:gong-wpf-dragdrop"
			 d:DesignHeight="450"
			 d:DesignWidth="200"
			 mc:Ignorable="d"
			 xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
			 MinWidth="0"
			 Unloaded="UserControl_Unloaded"
			 xmlns:wpfcontrol="clr-namespace:WpfCustomControlLibrary;assembly=WpfCustomControlLibrary"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" >

	<UserControl.Resources>
		<conv:ToIntConverter x:Key="ToIntConverter"/>
		<conv:MultiObjectConverter x:Key="MultiObject"/>
		<conv:TTNR_Converter x:Key="TTNR"/>
		<conv:TextCompareToColorConverter x:Key="txtColor"/>
		<conv:BullettShapeConverter x:Key="BulletShape"/>
        <conv:PermissionConverter x:Key="permiss"/>
    </UserControl.Resources>

	<Grid DataContext="{Binding}"
		  MinWidth="50"
		  x:Name="grid">

		<Grid.RowDefinitions>
			<RowDefinition Height="60"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
		<Border Background="RosyBrown"
				ClipToBounds="True"
				CornerRadius="5">
			<Grid>
				<Grid.RowDefinitions>
					<RowDefinition/>
					<RowDefinition/>
				</Grid.RowDefinitions>
				<Grid.ColumnDefinitions>
					<ColumnDefinition Width="1*"/>
					<ColumnDefinition Width="3*"/>
				</Grid.ColumnDefinitions>
                <Canvas>
                    <Button Click="HideDetails_Click"
						HorizontalAlignment="Left"
						x:Name="HideDetails"
						Padding="2"
						Style="{StaticResource MaterialDesignFlatButton}">
					<materialdesign:PackIcon Height="25"
											 Kind="Hide"
											 Width="25"/>
				</Button>

					<Button Canvas.Top="30"
                        Command="{Binding OpenMachineCommand, Mode=OneWay}"
							CommandParameter="{Binding InventNo}"
							HorizontalAlignment="Left"
							Padding="2"
							Style="{StaticResource MaterialDesignFlatButton}"
							ToolTip="Alternativ: Strg + LMB oder Strg + M">
						<materialdesign:PackIcon Height="25"
												 Kind="Details"
												 Width="25"/>
					</Button>
					<Button Canvas.Left="35" Canvas.Top="30"
							Command="{Binding MachinePrintCommand}"
							CommandParameter="{Binding}"
							Padding="2"
							Style="{StaticResource MaterialDesignFlatButton}"
							ToolTip="Drucken">
						<materialdesign:PackIcon Height="25"
												 Kind="PrinterEye"
												 Width="25"/>
					</Button>
                    <ToggleButton Canvas.Left="70" Canvas.Top="30" x:Name="emploees"
                                  Style="{DynamicResource MaterialDesignExpanderToggleButton}"
                                  IsEnabled="{Binding Converter={StaticResource permiss},
									ConverterParameter={x:Static const:Permissions.Employee}}"/>
                </Canvas>
                <Popup IsOpen="{Binding Path=IsChecked, ElementName=emploees}" Placement="Mouse" >
                    <Border>

                            <DataGrid ItemsSource="{Binding EmployeesView}" AutoGenerateColumns="False" Background="LemonChiffon">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Name" Binding="{Binding Path=User.UsrName}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="User" Binding="{Binding Path=User.UserIdent}" IsReadOnly="True"/>
                                <DataGridCheckBoxColumn Header="" Binding="{Binding Path=IsCheck, Mode=TwoWay}"/>
                            </DataGrid.Columns>
                            </DataGrid>
  
                    </Border>
                </Popup>
				<TextBlock Grid.Column="1"
						   Grid.Row="0"
						   Height="Auto"
						   HorizontalAlignment="Left"
						   Text="{Binding Name}"
						   TextWrapping="Wrap"/>
				<TextBlock Grid.Column="1"
						   Grid.Row="1"
						   Height="Auto"
						   HorizontalAlignment="Right"
						   Text="{Binding InventNo}"/>

			</Grid>
		</Border>
		<DataGrid AutoGenerateColumns="False"
				  CanUserAddRows="False"
				  CanUserDeleteRows="False"
				  CanUserSortColumns="False"
				  dd:DragDrop.DragHandler="{Binding}"
				  dd:DragDrop.DropHandler="{Binding}"
				  dd:DragDrop.IsDragSource="True"
				  dd:DragDrop.IsDropTarget="True"
				  Grid.Row="1"
				  IsSynchronizedWithCurrentItem="True"
				  ItemsSource="{Binding ProcessesCV}"
				  x:Name="Planed"
				  RowDetailsVisibilityMode="VisibleWhenSelected"
                  ContextMenu="{StaticResource BulletContextMenu}">
			<DataGrid.InputBindings>
				<MouseBinding Command="{Binding ApplicationCommands.OpenOrderCommand}"
							  CommandParameter="{Binding ElementName=Planed, Path=SelectedItem}"
							  MouseAction="LeftDoubleClick"/>
			</DataGrid.InputBindings>
			<!--<DataGrid.ContextMenu>
				<ContextMenu Width="Auto">
					<MenuItem Command="{Binding ApplicationCommands.OpenOrderCommand}"
							  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
							  Header="Auftrag öffnen">
						<MenuItem.Icon>
							<Image Source="/Images/planning.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="{Binding ApplicationCommands.ExplorerCommand}"
							  CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.SelectedItem}"
							  Header="Explorer öffnen">
						<MenuItem.Icon>
							<Image Source="/Images/files-and-folders.png"/>
						</MenuItem.Icon>
					</MenuItem>
					<Separator/>
					<MenuItem Command="{Binding SetMarkerCommand}"
							  Header="Markierung  löschen"
							  x:Name="DelBullet">
						<MenuItem.CommandParameter>
							<MultiBinding Converter="{StaticResource MultiObject}">
								<Binding Path="Name"
										 RelativeSource="{RelativeSource Self}"/>
								<Binding Path="PlacementTarget.SelectedItem"
										 RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}"/>
							</MultiBinding>
						</MenuItem.CommandParameter>
						<MenuItem.Icon>
							<wpfcontrol:BullettControl BullettColor="White"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="{Binding SetMarkerCommand}"
							  Header="roter Punkt"
							  x:Name="Bullet1">
						<MenuItem.CommandParameter>
							<MultiBinding Converter="{StaticResource MultiObject}">
								<Binding Path="Name"
										 RelativeSource="{RelativeSource Self}"/>
								<Binding Path="PlacementTarget.SelectedItem"
										 RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}"/>
							</MultiBinding>
						</MenuItem.CommandParameter>
						<MenuItem.Icon>
							<wpfcontrol:BullettControl BullettColor="Red"/>
						</MenuItem.Icon>
					</MenuItem>

					<MenuItem Command="{Binding SetMarkerCommand}"
							  Header="grüner Punkt"
							  x:Name="Bullet2">
						<MenuItem.CommandParameter>
							<MultiBinding Converter="{StaticResource MultiObject}">
								<Binding Path="Name"
										 RelativeSource="{RelativeSource Self}"/>
								<Binding Path="PlacementTarget.SelectedItem"
										 RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}"/>
							</MultiBinding>
						</MenuItem.CommandParameter>
						<MenuItem.Icon>
							<wpfcontrol:BullettControl BullettColor="Green"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="{Binding SetMarkerCommand}"
							  Header="gelber Punkt"
							  x:Name="Bullet3">
						<MenuItem.CommandParameter>
							<MultiBinding Converter="{StaticResource MultiObject}">
								<Binding Path="Name"
										 RelativeSource="{RelativeSource Self}"/>
								<Binding Path="PlacementTarget.SelectedItem"
										 RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}"/>
							</MultiBinding>
						</MenuItem.CommandParameter>
						<MenuItem.Icon>
							<wpfcontrol:BullettControl BullettColor="Yellow"/>
						</MenuItem.Icon>
					</MenuItem>
					<MenuItem Command="{Binding SetMarkerCommand}"
							  Header="blauer Punkt"
							  x:Name="Bullet4">
						<MenuItem.CommandParameter>
							<MultiBinding Converter="{StaticResource MultiObject}">
								<Binding Path="Name"
										 RelativeSource="{RelativeSource Self}"/>
								<Binding Path="PlacementTarget.SelectedItem"
										 RelativeSource="{RelativeSource AncestorType={x:Type ContextMenu}}"/>
							</MultiBinding>
						</MenuItem.CommandParameter>
						<MenuItem.Icon>
							<wpfcontrol:BullettControl BullettColor="Blue"/>
						</MenuItem.Icon>
					</MenuItem>
				</ContextMenu>
			</DataGrid.ContextMenu>-->

			<DataGrid.RowDetailsTemplate>
				<DataTemplate>
					<Grid Background="LightBlue">
						<StackPanel>
							<StackPanel Orientation="Horizontal">
								<TextBlock Text="{Binding AidNavigation.Material, Converter={StaticResource TTNR}}"/>
								<TextBlock Margin="10,0,5,0"
										   Text="{Binding Path=AidNavigation.MaterialNavigation.Bezeichng}"/>
							</StackPanel>
							<TextBlock Text="{Binding Path=Text}"
									   TextWrapping="Wrap"/>
						</StackPanel>
					</Grid>
				</DataTemplate>

			</DataGrid.RowDetailsTemplate>
			<DataGrid.Columns>
				<DataGridTemplateColumn x:Name="dataGridTemplateColumn">
					<DataGridTemplateColumn.CellTemplate>
						<DataTemplate>

							<wpfcontrol:BullettControl BullettColor="{Binding Bullet, TargetNullValue='White'}"
													   BullettShape="{Binding QuantityYield, Converter={StaticResource BulletShape}}"
													   HorizontalAlignment="Left"
													   VerticalAlignment="Top"/>

						</DataTemplate>
					</DataGridTemplateColumn.CellTemplate>
				</DataGridTemplateColumn>

				<DataGridTextColumn Binding="{Binding Aid, Mode=OneTime}"
									Header="Auftrag"
									IsReadOnly="True"
									Width="Auto">
					<DataGridTextColumn.ElementStyle>
						<Style TargetType="TextBlock">
							<Setter Property="Background">
								<Setter.Value>
									<MultiBinding Converter="{StaticResource txtColor}">
										<Binding Path="Aid"/>
										<Binding ElementName="searchTextBox"
												 Path="Text"/>
									</MultiBinding>
								</Setter.Value>
							</Setter>
						</Style>
					</DataGridTextColumn.ElementStyle>
				</DataGridTextColumn>

				<DataGridTextColumn Binding="{Binding Vnr, Mode=OneTime, StringFormat=\{0:D4\}}"
									Header="Vorgang"
									IsReadOnly="True"
									Width="Auto"/>

            </DataGrid.Columns>
		</DataGrid>
	</Grid>

</UserControl>