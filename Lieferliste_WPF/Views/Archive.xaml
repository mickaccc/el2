<UserControl x:Class="Lieferliste_WPF.Views.Archive"
             xml:lang="de-AT"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:local="clr-namespace:Lieferliste_WPF.Views"
             xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Tag="{Binding Title}">
    <Grid>
        <Grid.Resources>
            <conv:IfNullConverter x:Key="IfNull"/>
            <conv:BooleanToVisibilityConverter x:Key="BoolToVis"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="80*"/>
        </Grid.RowDefinitions>
        <DockPanel>
        <TextBox x:Name="searchTextBox" materialDesign:HintAssist.Hint="suche nach Auftragsnummer, TTNR, Materialbezeichnung oder Projekt"
                 materialDesign:TextFieldAssist.HasClearButton="True" FontSize="14"
                 Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding TextSearchCommand}"
                                           CommandParameter="{Binding Path=Text, ElementName=searchTextBox}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
            <Button Content="Messdokumente Archivieren"
                    Command="{Binding ArchivateCommand}"/>
            <TextBlock HorizontalAlignment="Right" Style="{DynamicResource MaterialDesignHeadline4TextBlock}" Text="{Binding Path=Items.Count, ElementName=data}"/>
        </DockPanel>
        <StackPanel Grid.Row="1">
            <mah:ProgressRing HorizontalAlignment="Center" VerticalAlignment="Center" Margin="50" IsActive="{Binding ContentTask.IsNotCompleted}"
                              Foreground="{DynamicResource ActiveProcess}"/>
            <TextBlock Text="{Binding ContentTask.ErrorMessage}" HorizontalAlignment="Center"
                        Visibility="{Binding ContentTask.IsFaulted, Converter={StaticResource BoolToVis}}"/>
        </StackPanel>
        <DataGrid x:Name="data" Grid.Row="1" CanUserAddRows="False" CanUserDeleteRows="False" CanUserReorderColumns="True"
                    CanUserResizeColumns="True" CanUserSortColumns="True" IsReadOnly="True" SelectionMode="Single"
                    AutoGenerateColumns="False" IsSynchronizedWithCurrentItem="True"
                    Visibility="{Binding ContentTask.IsSuccessfullyCompleted, Converter={StaticResource BoolToVis}}"
                    ItemsSource="{Binding ContentTask.Result}">
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Auftrag öffnen" Command="{Binding ApplicationCommands.OpenOrderCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                        Path=PlacementTarget.SelectedItem.Aid}"/>
                    <MenuItem Header="Eintrag kopieren" Command="Copy" 
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                        Path=PlacementTarget.SelectedItem}"/>
                    <MenuItem Header="zurückholen" Command="{Binding DeArchivateCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                        Path=PlacementTarget.SelectedItem}"/>
                    <MenuItem Header="Projekt öffnen" Command="{Binding ApplicationCommands.OpenProjectOverViewCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}},
                        Path=PlacementTarget.SelectedItem.ProId}"/>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.Columns>
                <DataGridTextColumn Header="Auftragsnummer" Binding="{Binding Aid}"/>
                <DataGridTextColumn Header="Material">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource IfNull}">
                            <Binding Path="Material"/>
                            <Binding Path="DummyMat"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Bezeichnung">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource IfNull}">
                            <Binding Path="MaterialNavigation.Bezeichng"/>
                            <Binding Path="DummyMatNavigation.Mattext"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Stückzahl" Binding="{Binding Quantity}"/>
                <DataGridTextColumn Header="Projekt" Binding="{Binding Pro.ProjectPsp}"/>
                <DataGridTextColumn Header="Projekt Info" Binding="{Binding Pro.ProjectInfo}"/>
                <DataGridTextColumn Header="Ist Ende" Binding="{Binding ActualEnd, StringFormat=\{0:d\}}"/>
                <DataGridTextColumn Header="SysStatus" Binding="{Binding SysStatus}"/>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</UserControl>
