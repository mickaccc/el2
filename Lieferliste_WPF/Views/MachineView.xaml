<Window
    xml:lang="de-AT"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
    xmlns:const="clr-namespace:El2Core.Constants;assembly=El2Core"
    xmlns:wpfControl="clr-namespace:WpfCustomControlLibrary;assembly=WpfCustomControlLibrary"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:dd="urn:gong-wpf-dragdrop"
    x:Class="Lieferliste_WPF.Views.MachineView"
        
        mc:Ignorable="d"
        MinHeight="450" MinWidth="800" SizeToContent="WidthAndHeight" >

    <Window.Resources>
        <conv:TTNR_Converter x:Key="ttnr"/>
        <conv:MultiObjectConverter x:Key="MultiObject"/>
        <conv:BullettShapeConverter x:Key="BulletShape"/>
        <conv:PermissionConverter x:Key="permiss"/>
        <conv:CommentConverter x:Key="comment"/>
        <conv:PlusConverter x:Key="plus"/>
        <System:Boolean x:Key="TrueValue">True</System:Boolean>
        <System:Boolean x:Key="FalseValue">False</System:Boolean>
        <System:DateTime x:Key="datetime"/>

        <Style x:Key="CellEditStyle" TargetType="{x:Type TextBox}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="LightYellow"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="AcceptsReturn" Value="True"/>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="IsHitTestVisible" Value="true"/>

        </Style>
        <!--<Style TargetType="{x:Type DataGridRow}">
            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Foreground" Value="Black"/>
                    <Setter Property="Background" Value="Transparent" />
                </Trigger>
            </Style.Triggers>
        </Style>-->

    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height=" 80"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Drucken" Command="{Binding MachinePrintCommand}"
                             CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}">
                    <MenuItem.Icon>
                        <materialDesign:PackIcon Kind="PrinterPrimary"/>
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
        <DockPanel Background="RosyBrown">

            <ListBox x:Name="cost" DockPanel.Dock="Right" VerticalAlignment="Top" ItemsSource="{Binding CostUnits}"
                     AutomationProperties.LabeledBy="{Binding ElementName=costLabel, Mode=OneWay}" />
            <Label x:Name="costLabel" Content="Kostenstellen" DockPanel.Dock="Right" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" >
                <Label.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Label.RenderTransform>
            </Label>
            <Button
                ToolTip="Drucken"
                Command="{Binding MachinePrintCommand}"
                CommandParameter="{Binding}"
                Style="{StaticResource MaterialDesignFlatButton}">
                    <materialDesign:PackIcon Kind="PrinterFavorite" Width="30" Height="30"/>
            </Button>
            <TextBox Text="{Binding Name}" DockPanel.Dock="Top" FontSize="30" FontWeight="Bold" Background="Transparent"/>
            <TextBox Text="{Binding Description}" DockPanel.Dock="Bottom" FontSize="20" Background="Transparent"/>
            
        </DockPanel>
        <DataGrid x:Name="MachProcesses" Grid.Row="1" ItemsSource="{Binding ProcessesCV}" AutoGenerateColumns="False"
                  CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False"
                  dd:DragDrop.IsDragSource="True" AlternatingRowBackground="LightGray" ContextMenu="{StaticResource BulletContextMenu}"
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DragHandler="{Binding}"
                  dd:DragDrop.DropHandler="{Binding}" >
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick"
                              Command="{Binding ApplicationCommands.OpenOrderCommand}"
                              CommandParameter="{Binding ElementName=MachProcesses, Path=SelectedValue}"/>
            </DataGrid.InputBindings>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Blue"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
            <DataGrid.Columns>
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate >
                            <wpfControl:BullettControl BullettColor="{Binding Bullet, TargetNullValue='White'}"
                                                       BullettShape="{Binding QuantityYield, Converter={StaticResource BulletShape}}"/>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Auftrag" Binding="{Binding Aid}" IsReadOnly="True" />
                <DataGridTextColumn Header="Vorgang" Binding="{Binding Vnr, StringFormat=\{0:D4\}}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Material" Binding="{Binding AidNavigation.Material, Converter={StaticResource ttnr}}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Bezeichnung" Binding="{Binding AidNavigation.MaterialNavigation.Bezeichng}" IsReadOnly="True"/>
                <DataGridTextColumn Header="SpätEnd" Binding="{Binding SpaetEnd, StringFormat=\{0:d\}}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="TL-Termin">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <DatePicker FirstDayOfWeek="Monday" ToolTip="voraussichtlicher Termin lt. Teamleiter" VerticalAlignment="Top"
                                      SelectedDate="{Binding Termin, Mode=TwoWay, NotifyOnSourceUpdated=True}"
                                      DisplayDate="{Binding Now, Mode=OneWay, Source={StaticResource datetime}}"
                                      IsEnabled="{Binding Converter={StaticResource permiss},
                                      ConverterParameter={x:Static const:Permissions.TLTermin}}" SnapsToDevicePixels="True"/>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Kurztext" Binding="{Binding Text}"  Width="120" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="ArbPl" Binding="{Binding ArbPlSap}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Kommentar" Binding="{Binding CommentMach, UpdateSourceTrigger=LostFocus}"
                                    EditingElementStyle="{StaticResource CellEditStyle}"
                                    IsReadOnly="{Binding Converter={StaticResource permiss},
                    ConverterParameter={x:Static const:Permissions.CommentTeInvers}}"/>
                <DataGridTemplateColumn Header="Bemerkung Teamleiter">
                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate>
                            <GroupBox ToolTip="Bemerkung Teamleiter" Width="150"
                                                Header="{Binding BemT,
                            Converter={StaticResource comment}, ConverterParameter={StaticResource TrueValue}}">
                                <TextBox Text="{Binding BemT, UpdateSourceTrigger=LostFocus,
                            Converter={StaticResource comment}, ConverterParameter={StaticResource FalseValue}}"
                                 IsEnabled="{Binding ConverterParameter={x:Static const:Permissions.CommentTe},
                                                                 Converter={StaticResource permiss}}"
                                                  TextWrapping="Wrap" AcceptsReturn="True" />
                            </GroupBox>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Gemeldet" Binding="{Binding QuantityYield}" IsReadOnly="True"/>
                <DataGridTextColumn Header="offen" Binding="{Binding QuantityMiss}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Ausschuss" Binding="{Binding QuantityScrap}" IsReadOnly="True"/>
                <DataGridTextColumn Header="NA" Binding="{Binding QuantityRework}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Dauer" IsReadOnly="True">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource plus}">
                            <Binding Path="Beaze"/>
                            <Binding Path="Rstze"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>
    </Grid>
</Window>
