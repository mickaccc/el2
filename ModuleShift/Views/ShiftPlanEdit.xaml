<UserControl x:Class="ModuleShift.Views.ShiftPlanEdit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:prism="http://prismlibrary.com/"
             xmlns:wpfCustom="clr-namespace:WpfCustomControlLibrary;assembly=WpfCustomControlLibrary"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:drop="urn:gong-wpf-dragdrop"
             xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
             xmlns:local="clr-namespace:ModuleShift.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Tag="{Binding Title}">
    <Grid>
        <Grid.Resources>
            <conv:BooleanToVisibilityConverter x:Key="boolToVis"/>
            <conv:MultiObjectConverter x:Key="multi"/>

        </Grid.Resources>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="120"/>
            <ColumnDefinition Width="400*"/>
            <ColumnDefinition Width="100*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <ToolBar Grid.ColumnSpan="3">
            <ToolBar.ContextMenu>
                <ContextMenu>
                    <MenuItem Header="Cover hinzufügen" Command="{Binding AddCoverCommand}"/>
                </ContextMenu>
            </ToolBar.ContextMenu>
            <Button Command="{Binding SaveAllCommand}"
                    CommandParameter="{Binding SelectedItem, ElementName=ShiftPlans}"
                    Style="{DynamicResource MahApps.Styles.Button.MetroSquare.Accent}" Margin="5">
                <icons:PackIconCoolicons Kind="Save"
                                         ToolTip="ausgewählter Wochenplan speichern"/>
            </Button>
            <Button Command="{Binding SaveNewCommand}" Style="{DynamicResource MahApps.Styles.Button.MetroSquare.Accent}" Margin="5"
                    ToolTip="Wochenplan unter neuen Namen speichern">
                <icons:BootstrapIcons Kind="Save"/>
            </Button>
            <ToggleButton IsChecked="{Binding IsRubberChecked}">
                <Image Source="\Images\eraser.png" Height="50"/>
            </ToggleButton>
            <ListBox ItemsSource="{Binding ShiftCovers}"
                     drop:DragDrop.IsDragSource="True"
                     drop:DragDrop.IsDropTarget="False">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <StackPanel Orientation="Horizontal"/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        
                        <materialDesign:Chip Content="{Binding CoverName}" Margin="10" Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}" >
                            <materialDesign:Chip.Icon>
                                <materialDesign:PackIcon Kind="Lock" Visibility="{Binding Lock, Converter={StaticResource boolToVis }}"/>
                            </materialDesign:Chip.Icon>
                            <materialDesign:Chip.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Cover löschen" Command="{Binding PlacementTarget.Tag.DeleteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                    <MenuItem Header="Cover Details" Command="{Binding PlacementTarget.Tag.DetailCoverCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                        CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                </ContextMenu>
                            </materialDesign:Chip.ContextMenu>
                        </materialDesign:Chip>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </ToolBar>
        <ListBox Grid.Row="1" ItemsSource="{Binding ShiftWeekPlans}" SelectedItem="{Binding SelectedPlan, Mode=TwoWay}"
                 x:Name="ShiftPlans" >
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding ShiftPlanSelectionChangedCommand}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock  Text="{Binding ShiftPlanName}" TextWrapping="Wrap" Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}">

                            <TextBlock.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Löschen" Command="{Binding PlacementTarget.Tag.DeleteCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                          CommandParameter="{Binding PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                </ContextMenu>
                            </TextBlock.ContextMenu>
                        </TextBlock>
                        <Label Visibility="{Binding Lock, Converter={StaticResource boolToVis}}">
                            <Label.Content>
                                <icons:BootstrapIcons Kind="Lock"/>
                            </Label.Content>
                        </Label>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>
        </ListBox>

        <ItemsControl Grid.Column="1" Grid.Row="1" ItemsSource="{Binding SelectedPlan.ShiftWeekDays}"
                      drop:DragDrop.IsDropTarget="True" drop:DragDrop.DropHandler="{Binding}" >
            <ItemsControl.ItemTemplate>
                <DataTemplate>
                    <wpfCustom:BitPicture1D BoolPattern="{Binding Definition, Mode=OneWay}" WeekDay="{Binding WeekDayName, Mode=OneTime}" 
                                            StripeHeight="50" LowColor="AntiqueWhite" HighColor="{DynamicResource Theme.ShowcaseBrush}"
                                            Margin="5" Height="70"/>

                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
        <Grid Grid.Row="1" Grid.Column="2">
            <Grid.RowDefinitions>
                <RowDefinition/>
                <RowDefinition/>
            </Grid.RowDefinitions>

            <ListBox ItemsSource="{Binding ShiftCalendars}" SelectedItem="{Binding SelectedCalendar}">
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="neuer Schicht Kalender" Command="{Binding NewCalendarCommand}"/>
                        <MenuItem Header="Kalender löschen" Command="{Binding PlacementTarget.DataContext.DelCalendarCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <CheckBox IsChecked="{Binding Repeat}"/>
                            <TextBlock Text="{Binding CalendarName}" TextWrapping="Wrap"/>
                            <Label Visibility="{Binding IsLocked, Converter={StaticResource boolToVis}}">
                                <Label.Content>
                                    <icons:BootstrapIcons Kind="Lock"/>
                                </Label.Content>
                            </Label>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
            <ListBox Grid.Row="1" x:Name="lvShiftWeek" ItemsSource="{Binding SelectedCalendar.ShiftWeeks}"
                      IsSynchronizedWithCurrentItem="True" >
                <ListBox.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="neuer Eintrag" Command="{Binding NewCalendarShiftCommand}"/>
         
                    </ContextMenu>
                </ListBox.ContextMenu>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal">
                            <TextBox Text="{Binding YearKW}" Margin="15,0,15,0" Name="txtKW"
                                       Visibility="{Binding DataContext.SelectedCalendar.IsNotRepeat, Converter={StaticResource boolToVis},
                                    RelativeSource={RelativeSource AncestorType=UserControl}}">
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="LostFocus">
                                        <i:InvokeCommandAction Command="{Binding DataContext.ComboSelectionChangedCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                            <i:InvokeCommandAction.CommandParameter>
                                                <MultiBinding Converter="{StaticResource multi}">
                                                    <Binding Path="SelectedIndex" ElementName="lvShiftWeek"/>
                                                    <Binding Path="Text" ElementName="txtKW"/>
                                                </MultiBinding>
                                            </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                            </TextBox>
                            <ComboBox ItemsSource="{Binding DataContext.ShiftWeekPlans, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                      SelectedItem="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListBoxItem}}"
                                      
                                      x:Name="cmbShiftPlan" 
                                      GotFocus="cmbShiftPlan_GotFocus" >
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="SelectionChanged">
                                        <i:InvokeCommandAction Command="{Binding DataContext.ComboSelectionChangedCommand, RelativeSource={RelativeSource AncestorType=UserControl}}">
                                            <i:InvokeCommandAction.CommandParameter>
                                                <MultiBinding Converter="{StaticResource multi}">
                                                    <Binding Path="SelectedIndex" ElementName="lvShiftWeek"/>
                                                    <Binding Path="SelectedItem" ElementName="cmbShiftPlan"/>
                                                </MultiBinding>
                                            </i:InvokeCommandAction.CommandParameter>
                                        </i:InvokeCommandAction>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>
                                <ComboBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ShiftPlanName}"/>
                                    </DataTemplate>
                                </ComboBox.ItemTemplate>
                                <ComboBox.ContextMenu>
                                    <ContextMenu >
                                        <MenuItem Header="Eintrag löschen" Command="{Binding PlacementTarget.Tag.DelCalendarShiftCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                                  CommandParameter="{Binding PlacementTarget.SelectedItem, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                    </ContextMenu>
                                </ComboBox.ContextMenu>
                            </ComboBox>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </Grid>
    </Grid>
</UserControl>
