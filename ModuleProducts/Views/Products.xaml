<UserControl x:Class="ModuleProducts.Views.Products"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
             xmlns:wpfcontrol="clr-namespace:WpfCustomControlLibrary;assembly=WpfCustomControlLibrary"
             xmlns:vh="clr-namespace:vhCalendar;assembly=vhCalendar"
             xmlns:prism="http://prismlibrary.com/"
             prism:ViewModelLocator.AutoWireViewModel="True"
             xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
             xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
             xmlns:local="clr-namespace:ModuleProducts.Views"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800" Tag="{Binding Title}">
    <Grid>
        <Grid.Resources>
            <conv:TTNR_Converter x:Key="TTNR"/>
            <conv:ArchivStateConverter x:Key="ArchivState"/>
            <conv:ActivateColorConverter ActiveColor="LightGreen" x:Key="Active"/>
            <conv:MultiObjectConverter x:Key="multi"/>
            <conv:BooleanToVisibilityConverter x:Key="BoolToVis"/>
        </Grid.Resources>
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="185"/>
        </Grid.ColumnDefinitions>
        <StackPanel Orientation="Horizontal">
            <TextBox x:Name="search"
                 materialdesign:HintAssist.Hint="nach TTNR, Bezeichnung oder Auftragsnummer suchen"
                 materialdesign:TextFieldAssist.HasClearButton="False" Text="{Binding Path=SearchText}"
                 Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                <TextBox.InputBindings>
                    <KeyBinding Key="Return" Command="{Binding SearchCommand}"
                            CommandParameter="{Binding Path=Text, RelativeSource={RelativeSource AncestorType=TextBox}}" />
                </TextBox.InputBindings>
            </TextBox>
  
            
            <Button Content="Archivieren" Margin="10,0,0,0" Padding="10,0" Command="{Binding ArchivateCommand}"
                    Style="{DynamicResource MahApps.Styles.Button.Flat}" />
            
        </StackPanel>
  
        <StackPanel Grid.Row="1" >

            <mah:ProgressRing HorizontalAlignment="Center" VerticalAlignment="Center" Margin="50" IsActive="True" Foreground="{DynamicResource ActiveProcess}"
                   Visibility="{Binding MaterialTask.IsNotCompleted, Converter={StaticResource BoolToVis}}"/>
            <TextBlock Text="{Binding MaterialTask.ErrorMessage}" HorizontalAlignment="Center"
                   Visibility="{Binding MaterialTask.IsFaulted, Converter={StaticResource BoolToVis}}"/>
        </StackPanel>
        <ListBox Grid.Row="1" ItemsSource="{Binding MaterialTask.Result}" Visibility="{Binding MaterialTask.IsSuccessfullyCompleted, Converter={StaticResource BoolToVis}}" >
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <StackPanel>
                        <StackPanel Orientation="Horizontal" Background="Cyan" Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}">
                            <TextBlock Text="{Binding TTNR, Converter={StaticResource TTNR}}" Margin="0,0,10,0" FontSize="14" FontWeight="Bold" />
                            <TextBlock Text="{Binding Description}" FontSize="14" FontWeight="Bold" />
                            <TextBlock Text="{Binding ProdOrders.Count}" Margin="10,0,0,0"/>
                            <StackPanel.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Explorer"  Command="{Binding PlacementTarget.Tag.ApplicationCommands.ExplorerCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                              CommandParameter="{Binding Path=PlacementTarget.DataContext, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                </ContextMenu>
                            </StackPanel.ContextMenu>
                        </StackPanel>
                        <DataGrid ItemsSource="{Binding ProdOrders}" IsReadOnly="True" AutoGenerateColumns="False" Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}">
                            <DataGrid.InputBindings>
                                <MouseBinding Command="{Binding DataContext.ApplicationCommands.OpenOrderCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                  CommandParameter="{Binding Path=SelectedItem.OrderNr,  RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                  MouseAction="LeftDoubleClick"/>
                            </DataGrid.InputBindings>
                            <DataGrid.ContextMenu>
                                <ContextMenu>
                                    <MenuItem Header="Auftrag öffnen" Command="{Binding PlacementTarget.Tag.ApplicationCommands.OpenOrderCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                              CommandParameter="{Binding Path=PlacementTarget.SelectedItem.OrderNr, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                    <MenuItem Header="Explorer" Command="{Binding PlacementTarget.Tag.ApplicationCommands.ExplorerCommand, RelativeSource={RelativeSource AncestorType=ContextMenu}}"
                                              CommandParameter="{Binding Path=PlacementTarget.SelectedItem.OrderLink, RelativeSource={RelativeSource AncestorType=ContextMenu}}"/>
                                </ContextMenu>
                            </DataGrid.ContextMenu>
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Auftrag" Binding="{Binding OrderNr}" >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock">
                                            <Setter Property="Background">
                                                <Setter.Value>
                                                    <MultiBinding Converter="{StaticResource ArchivState}">
                                                        <Binding Path="Closed" UpdateSourceTrigger="PropertyChanged"/>
                                                        <Binding Path="ArchivState" UpdateSourceTrigger="PropertyChanged"/>
                                                    </MultiBinding>
                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                    
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Eckstart" Binding="{Binding Start, StringFormat=\{0:d\}}"/>
                                <DataGridTextColumn Header="Eckende" Binding="{Binding End, StringFormat=\{0:d\}}"/>
                                <DataGridTextColumn Header="Menge" Binding="{Binding Quantity}"/>
                                <DataGridTextColumn Header="Geliefert" Binding="{Binding Delivered}"/>
                                <DataGridTextColumn Header="Ausschuss" Binding="{Binding Scrap}"/>
                                <DataGridTextColumn Header="Nacharbeit" Binding="{Binding Rework}"/>
                                <DataGridTextColumn Header="Abgelegt" Binding="{Binding Completed, StringFormat=\{0:d\}}"/>
                                <DataGridTemplateColumn Header="Mustersonderfreigabe">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <ListBox ItemsSource="{Binding Tags}">
                                                <ListBox.ItemTemplate>
                                                    <DataTemplate>
                                                        <TextBlock Text="{Binding}">
                                                    <TextBlock.InputBindings>
                                                        <MouseBinding MouseAction="LeftDoubleClick"
                             Command="{Binding DataContext.ApplicationCommands.FollowMsfCommand, RelativeSource={RelativeSource AncestorType=UserControl}}"
                             CommandParameter="{Binding}"/>
                                                    </TextBlock.InputBindings>
                                                </TextBlock>
                                                    </DataTemplate>
                                                </ListBox.ItemTemplate>
                                            </ListBox>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </StackPanel>
                </DataTemplate>
            </ListBox.ItemTemplate>

        </ListBox>
        <Button Grid.Column="1" Content="Suche" Style="{DynamicResource MahApps.Styles.Button.Flat}"
                Command="{Binding SearchCommand}"
                CommandParameter="{Binding Path=Text, ElementName=search}"/>


        <vh:Calendar HorizontalAlignment="Right" Grid.Row="1" Grid.Column="1"  Height="200" Margin="0,0,10,0" VerticalAlignment="Top"
            SelectionMode="Multiple" FooterStyle="Selection_Count">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectedDatesChanged">
                    <i:InvokeCommandAction Command="{Binding DateSelectedCommand}" CommandParameter="{Binding SelectedDates, RelativeSource={RelativeSource AncestorType=vh:Calendar}}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </vh:Calendar>
    </Grid>
</UserControl>
