<UserControl x:Class="ModulePlanning.UserControls.MachineUserControl"
			 xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
			 xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             xmlns:const="clr-namespace:El2Core.Constants;assembly=El2Core"
			 DataContextChanged="UserControl_DataContextChanged"
             Loaded="UserControl_Loaded"
			 xmlns:dd="urn:gong-wpf-dragdrop"
			 d:DesignHeight="450"
			 mc:Ignorable="d"
			 xmlns:iconpack="http://metro.mahapps.com/winfx/xaml/iconpacks"
			 xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:sys="clr-namespace:System;assembly=mscorlib"
			 MinWidth="40"
			 xmlns:wpfcontrol="clr-namespace:WpfCustomControlLibrary;assembly=WpfCustomControlLibrary"
			 xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
			 xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation" >

	<UserControl.Resources>
		<conv:ToIntConverter x:Key="ToIntConverter"/>
		<conv:MultiObjectConverter x:Key="MultiObject"/>
		<conv:TTNR_Converter x:Key="TTNR"/>
		<conv:TextCompareToColorConverter x:Key="txtColor"/>
		<conv:BullettShapeConverter x:Key="BulletShape"/>
        <conv:PermissionConverter x:Key="permiss"/>
        <conv:ScrollIntoViewConverter x:Key="scrollInto"/>
        <conv:BoolRowDetail x:Key="rowDetail"/>
        <conv:EnumToCollectionConverter x:Key="EnumConv"/>



            <DataGrid x:Key="Setup1"  AutoGenerateColumns="False" 
		  CanUserAddRows="False"
		  CanUserDeleteRows="False"
		  CanUserSortColumns="False"
		  dd:DragDrop.DragHandler="{Binding}"
		  dd:DragDrop.DropHandler="{Binding}"
		  dd:DragDrop.IsDragSource="True"
		  dd:DragDrop.IsDropTarget="True"
		  Grid.Row="1"
		  IsSynchronizedWithCurrentItem="True"
		  ItemsSource="{Binding ProcessesCV}"
		  VirtualizingPanel.IsVirtualizing="False" 
		  RowDetailsVisibilityMode="{Binding EnableRowDetails, Converter={StaticResource rowDetail}}"  IsReadOnly="True" >
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.Resources>
                            <Style TargetType="{x:Type MenuItem}" >
                                <Setter Property="CommandParameter" Value="{Binding Path=PlacementTarget.SelectedItem,
                          RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                                <Setter Property="Height" Value="30"/>
                            </Style>
                        </ContextMenu.Resources>
                        <ContextMenu.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{StaticResource MachineCm}"/>
                                <CollectionContainer Collection="{StaticResource AppCommandsCm}"/>
                            </CompositeCollection>
                        </ContextMenu.ItemsSource>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.InputBindings>
                    <MouseBinding Command="{Binding ApplicationCommands.OpenOrderCommand}"
					  CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType=DataGrid}}"
					  MouseAction="LeftDoubleClick"/>
                </DataGrid.InputBindings>

                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Grid Background="LightBlue">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock x:Name="Row0" Text="{Binding AidNavigation.Material, Converter={StaticResource TTNR}}"/>
                                    <TextBlock x:Name="Row1" Margin="10,0,5,0" Text="{Binding AidNavigation.MaterialNavigation.Bezeichng}"/>
                                </StackPanel>
                                <TextBlock x:Name="Row2" TextWrapping="Wrap" Text="{Binding Text}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>

                </DataGrid.RowDetailsTemplate>
                <DataGrid.Columns>

                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <wpfcontrol:BullettControl BullettColor="{Binding Bullet, TargetNullValue='White'}"
											   BullettShape="{Binding QuantityYield, Converter={StaticResource BulletShape}}"
											   HorizontalAlignment="Left"
											   VerticalAlignment="Top"
                                               Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                               ContextMenu="{StaticResource BulletContextMenu}"/>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Binding="{Binding Aid, Mode=OneTime}" 
							Header="Auftrag"
							Width="Auto">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource txtColor}">
                                            <Binding />
                                            <Binding ElementName="searchTextBox"
										 Path="Text"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>

                            </Style>
                        </DataGridTextColumn.ElementStyle>

                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Vorg" Binding="{Binding Vnr, StringFormat=\{0:d4\}}"/>
                </DataGrid.Columns>
            </DataGrid>

            <DataGrid x:Key="Setup2"  AutoGenerateColumns="False" 
          CanUserAddRows="False"
          CanUserDeleteRows="False"
          CanUserSortColumns="False"
          dd:DragDrop.DragHandler="{Binding}"
          dd:DragDrop.DropHandler="{Binding}"
          dd:DragDrop.IsDragSource="True"
          dd:DragDrop.IsDropTarget="True"
          Grid.Row="1" 
          IsSynchronizedWithCurrentItem="True"
          ItemsSource="{Binding ProcessesCV}"
          VirtualizingPanel.IsVirtualizing="False"
          RowDetailsVisibilityMode="{Binding EnableRowDetails, Converter={StaticResource rowDetail}}"  IsReadOnly="True" >
                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <ContextMenu.Resources>
                            <Style TargetType="{x:Type MenuItem}" >
                                <Setter Property="CommandParameter" Value="{Binding Path=PlacementTarget.SelectedItem,
                  RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                                <Setter Property="Height" Value="30"/>
                            </Style>
                        </ContextMenu.Resources>
                        <ContextMenu.ItemsSource>
                            <CompositeCollection>
                                <CollectionContainer Collection="{StaticResource MachineCm}"/>
                                <CollectionContainer Collection="{StaticResource AppCommandsCm}"/>
                            </CompositeCollection>
                        </ContextMenu.ItemsSource>
                    </ContextMenu>
                </DataGrid.ContextMenu>
                <DataGrid.InputBindings>
                    <MouseBinding Command="{Binding ApplicationCommands.OpenOrderCommand}"
			  CommandParameter="{Binding Path=SelectedItem, RelativeSource={RelativeSource AncestorType=DataGrid}}"
			  MouseAction="LeftDoubleClick"/>
                </DataGrid.InputBindings>

                <DataGrid.RowDetailsTemplate>
                    <DataTemplate>
                        <Grid Background="LightBlue">
                            <StackPanel>
                                <StackPanel Orientation="Horizontal">
                                    <TextBlock  Text="{Binding AidNavigation.Material, Converter={StaticResource TTNR}}"/>
                                    <TextBlock  Margin="10,0,5,0" Text="{Binding AidNavigation.MaterialNavigation.Bezeichng}"/>
                                </StackPanel>
                                <TextBlock  TextWrapping="Wrap" Text="{Binding Text}"/>
                            </StackPanel>
                        </Grid>
                    </DataTemplate>

                </DataGrid.RowDetailsTemplate>
                <DataGrid.Columns>

                    <DataGridTemplateColumn>
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <wpfcontrol:BullettControl BullettColor="{Binding Bullet, TargetNullValue='White'}"
									   BullettShape="{Binding QuantityYield, Converter={StaticResource BulletShape}}"
									   HorizontalAlignment="Left"
									   VerticalAlignment="Top"
                                       Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                       ContextMenu="{StaticResource BulletContextMenu}"/>

                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>

                    <DataGridTextColumn Binding="{Binding Aid, Mode=OneTime}" 
					Header="Auftrag"
					Width="Auto">
                        <DataGridTextColumn.ElementStyle>
                            <Style TargetType="TextBlock">
                                <Setter Property="Background">
                                    <Setter.Value>
                                        <MultiBinding Converter="{StaticResource txtColor}">
                                            <Binding />
                                            <Binding ElementName="searchTextBox"
								 Path="Text"/>
                                        </MultiBinding>
                                    </Setter.Value>
                                </Setter>

                            </Style>
                        </DataGridTextColumn.ElementStyle>

                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Vorg" Binding="{Binding Vnr, StringFormat=\{0:d4\}}"/>
                    <DataGridTextColumn Header="Material" Binding="{Binding AidNavigation.Material, Converter={StaticResource TTNR}}"/>
                </DataGrid.Columns>
            </DataGrid>

    </UserControl.Resources>

	<Grid DataContext="{Binding}"
		  MinWidth="50"
		  x:Name="grid">

		<Grid.RowDefinitions>
			<RowDefinition Height="60"/>
			<RowDefinition Height="*"/>
		</Grid.RowDefinitions>
        <Border Background="{DynamicResource MahApps.Brushes.AccentBase}"
				ClipToBounds="True"
				CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="1*"/>
                    <ColumnDefinition Width="3*"/>
                </Grid.ColumnDefinitions>
                <Canvas>
                    <Button Click="HideDetails_Click"
						HorizontalAlignment="Left"
						x:Name="HideDetails"
						Padding="2"
						Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}">
                        <iconpack:BootstrapIcons Height="25"
											 Kind="ArrowUpCircle"
											 Width="25"/>
                    </Button>

                    <Button Canvas.Top="30"
                        Command="{Binding OpenMachineCommand, Mode=OneWay}"
							CommandParameter="{Binding InventNo}"
							HorizontalAlignment="Left"
							Padding="2"
							Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}"
							ToolTip="Alternativ: Strg + LMB oder Strg + M">
                        <iconpack:MaterialDesign Height="25"
												 Kind="Details"
												 Width="25"/>
                    </Button>
                    <Button Canvas.Left="35" Canvas.Top="30"
							Command="{Binding ApplicationCommands.MachinePrintCommand}"
							CommandParameter="{Binding}"
							Padding="2"
							Style="{DynamicResource MahApps.Styles.Button.MetroSquare.Accent }"
							ToolTip="Drucken">
                        <iconpack:BootstrapIcons Height="25"
												 Kind="Printer"
												 Width="25"/>
                    </Button>
                    <ToggleButton Canvas.Left="70" Canvas.Top="30" x:Name="shiftOpen"
                                  Style="{DynamicResource MahApps.Styles.ToggleButton.ExpanderHeader.Down}"
                                  IsEnabled="{Binding Converter={StaticResource permiss},
									ConverterParameter={x:Static const:Permissions.ShiftAlloc}}" />
                </Canvas>
                <Popup IsOpen="{Binding Path=IsChecked, ElementName=shiftOpen}" Placement="Mouse" >
                    <Border>
                        <ListBox ItemsSource="{Binding ShiftPlans}"
                                 SelectedValuePath="Key"
                                 SelectedValue="{Binding SelectedRadioButton, Mode=TwoWay}">
                            <ListBox.Resources>
                                <Style TargetType="{x:Type ListBoxItem}">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate>
                                                <RadioButton                              
                                                        IsChecked="{Binding Path=IsSelected,
                                                        RelativeSource={RelativeSource TemplatedParent},
                                                        Mode=TwoWay}" Background="Cyan">
                                                    <ContentPresenter Content="{Binding Value}" />
                                                </RadioButton>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                </Style>
                            </ListBox.Resources>
                        </ListBox>
                    </Border>
                </Popup>

                <TextBlock Grid.Column="1"
						   Grid.Row="0"
						   Height="Auto"
						   HorizontalAlignment="Left"
						   Text="{Binding Name}"
						   TextWrapping="Wrap"/>
                <TextBlock Grid.Column="1"
						   Grid.Row="1"
						   Height="Auto"
						   HorizontalAlignment="Right"
						   Text="{Binding InventNo}"/>

            </Grid>
        </Border>
        <ContentControl x:Name="Planed" Grid.Row="1" Content="{DynamicResource Setup}" />
    </Grid>

</UserControl>