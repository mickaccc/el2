<UserControl
    x:Class="ModulePlanning.Views.MachinePlan"
    xml:lang="de-AT"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:icons="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
    xmlns:materialdesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:control="clr-namespace:ModulePlanning.UserControls"
    xmlns:prism="http://prismlibrary.com/"
    prism:ViewModelLocator.AutoWireViewModel="True"
    xmlns:dd="urn:gong-wpf-dragdrop"
    mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="800"  Tag="{Binding Title}" >

    <UserControl.Resources>
        <conv:TTNR_Converter x:Key="ttnr"/>
        <conv:MultiObjectConverter x:Key="multi"/>
        <conv:PlusConverter x:Key="plus"/>
        <conv:KW_Converter x:Key="KW"/>

    </UserControl.Resources>
 
    <Grid x:Name="Main" >
 

        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="250*"/>
            <RowDefinition Height="200*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="20" x:Name="ParkColumn"/>
        </Grid.ColumnDefinitions>
        <Grid.Resources>
            <Style TargetType="{x:Type DataGridRow}" x:Key="RowCustomStyle">
                <Style.Triggers>
                    <Trigger Property="DataGridRow.IsSelected" Value="True">
                        <Setter Property="Background" Value="{DynamicResource MahApps.Brushes.DataGrid.Selection.BorderBrush.Focus}" />
                    </Trigger>
                </Style.Triggers>
            </Style>
        </Grid.Resources>
        <DockPanel HorizontalAlignment="Stretch">
            <Button Command="{Binding SaveCommand}" HorizontalAlignment="Right"
                    Style="{DynamicResource MahApps.Styles.Button.MetroSquare.Accent}">
                <icons:MaterialDesign Width="40" Kind="Save"/>
            </Button>
            <ComboBox x:Name="workArea" ItemsSource="{Binding WorkAreas}" DockPanel.Dock="Left" MinWidth="100"
                      DisplayMemberPath="Bereich"
                      SelectedValuePath="WorkAreaId"
                      SelectedIndex="0">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SelectionChangeCommand}" PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>

            </ComboBox>
            
            <TextBox x:Name="searchTextBox" VerticalContentAlignment="Center" DockPanel.Dock="Left" Margin="10,0,10,0"
                     materialdesign:HintAssist.Hint="suchen in Auftragsnummer, TTNR und Materialbezeichnung"
                     materialdesign:TextFieldAssist.HasClearButton="false" 
                     Style="{DynamicResource MaterialDesignFloatingHintTextBox}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding TextSearchCommand}" CommandParameter="{Binding Path=Text, ElementName=searchTextBox}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
            <TextBox x:Name="searchTextBoxArbPl" VerticalContentAlignment="Center" DockPanel.Dock="Left" Margin="10,0,10,0"
         materialdesign:HintAssist.Hint="suchen in Arbeitsplatz SAP"
         materialdesign:TextFieldAssist.HasClearButton="false" 
         Style="{DynamicResource MaterialDesignFloatingHintTextBox}" >
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction Command="{Binding TextSearchArbPlCommand}" CommandParameter="{Binding Path=Text, ElementName=searchTextBoxArbPl}" />
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>
        </DockPanel>
        <mah:ProgressRing Grid.Row="1" IsActive="True" Foreground="{DynamicResource ActiveProcess}"
                     Visibility="{Binding MachineTask.IsNotCompleted, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <TextBlock Grid.Row="1" Text="{Binding MachineTask.ErrorMessage}"
                   Visibility="{Binding MachineTask.IsFaulted, Converter={StaticResource BooleanToVisibilityConverter}}"/>
        <ListBox x:Name="machines" ScrollViewer.HorizontalScrollBarVisibility="Auto" Grid.Row="1"
                 ScrollViewer.VerticalScrollBarVisibility="Auto" ItemsSource="{Binding MachineTask.Result}"
                 Visibility="{Binding MachineTask.IsSuccessfullyCompleted, Converter={StaticResource BooleanToVisibilityConverter}}"
                 VirtualizingPanel.IsVirtualizing="True" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                 dd:DragDrop.IsDragSource="True"
                 dd:DragDrop.IsDropTarget="True"
                 dd:DragDrop.DropHandler="{Binding}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <VirtualizingStackPanel x:Name="stackPanel" Orientation="Horizontal" />
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="ListBoxItem">
                    <Setter Property="Padding" Value="1"/>
                    <Setter Property="Background" Value="Black"/>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate>
                    <control:MachineUserControl Height="{Binding ActualHeight, ElementName=machines, Mode=OneWay}"
                                                Width="{Binding Path=Value, ElementName=slider}"/>
                </DataTemplate>
            </ListBox.ItemTemplate>

        </ListBox>
        <Border  BorderBrush="IndianRed" BorderThickness="2" Grid.Column="1" Grid.RowSpan="2" MouseEnter="Border_MouseEnter" MouseLeave="Border_MouseLeave" >
            <ListBox ItemsSource="{Binding ParkingCV}" x:Name="parking"
                    dd:DragDrop.IsDragSource="True"
                    dd:DragDrop.IsDropTarget="True"
                    dd:DragDrop.DropHandler="{Binding}" >
                <!--<ListBox.Background>
                    <ImageBrush ImageSource="/Images/parking.png" />
                </ListBox.Background>-->
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="MouseDoubleClick">
                        <i:InvokeCommandAction Command="{Binding ApplicationCommands.OpenOrderCommand}"
                                            CommandParameter="{Binding ElementName=parking, Path=SelectedItem}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <StackPanel Orientation="Horizontal" >
                            <TextBlock Text="{Binding Aid}" Margin="5,0"/>
                            <TextBlock Text="{Binding Vnr, StringFormat=\{0:D4\}}"/>
                        </StackPanel>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

        </Border>

        <Slider x:Name="slider" Width="200" Minimum="30" Maximum="340" Margin="10"
                    Value="200" HorizontalAlignment="Right" />
        <DataGrid x:Name="UnPlaned" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" ItemsSource="{Binding ProcessCV}" AutoGenerateColumns="False"
                  dd:DragDrop.IsDragSource="True" dd:DragDrop.IsDropTarget="True" dd:DragDrop.DropHandler="{Binding}" 
                  CanUserAddRows="False" CanUserDeleteRows="False" HorizontalContentAlignment="Center" ColumnWidth="Auto"
                  IsTextSearchEnabled="True" IsTextSearchCaseSensitive="False" SelectionMode="Extended" RowStyle="{StaticResource RowCustomStyle}" >
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick"
                              Command="{Binding ApplicationCommands.OpenOrderCommand}"
                              CommandParameter="{Binding ElementName=UnPlaned, Path=SelectedItem}"/>
            </DataGrid.InputBindings>
   
            <DataGrid.Columns>
                <DataGridTextColumn Header="Auftrag" Binding="{Binding Path=Aid}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Vorgang" Binding="{Binding Vnr, StringFormat=\{0:D4\}}" IsReadOnly="True" />
                <DataGridTextColumn Header="Material" Binding="{Binding AidNavigation.Material, Converter={StaticResource ttnr}}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Bezeichnung" Binding="{Binding Path=AidNavigation.MaterialNavigation.Bezeichng}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Spätstart" Binding="{Binding SpaetStart, Converter={StaticResource KW},
                    ConverterParameter=1}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Spätend" Binding="{Binding SpaetEnd, Converter={StaticResource KW},
                    ConverterParameter=1}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Kurztext" Binding="{Binding Path=Text,UpdateSourceTrigger=PropertyChanged}" IsReadOnly="True"/>
                <DataGridTextColumn Header="ArbPl" Binding="{Binding ArbPlSap}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Dauer" IsReadOnly="True">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource plus}">
                            <Binding Path="Beaze"/>
                            <Binding Path="Rstze"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</UserControl>
