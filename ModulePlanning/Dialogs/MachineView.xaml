<UserControl
    xml:lang="de-AT"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:iconpack="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
    xmlns:const="clr-namespace:El2Core.Constants;assembly=El2Core"
    xmlns:wpfControl="clr-namespace:WpfCustomControlLibrary;assembly=WpfCustomControlLibrary"
    xmlns:System="clr-namespace:System;assembly=mscorlib"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:dd="urn:gong-wpf-dragdrop"
    xmlns:dialogs="clr-namespace:ModulePlanning.Dialogs"
    x:Class="ModulePlanning.Dialogs.MachineView"
        
        mc:Ignorable="d"
        MinHeight="450" MinWidth="800" MaxHeight="750" >

    <UserControl.Resources>
        <conv:TTNR_Converter x:Key="ttnr"/>
        <conv:MultiObjectConverter x:Key="MultiObject"/>
        <conv:BullettShapeConverter x:Key="BulletShape"/>
        <conv:PermissionConverter x:Key="permiss"/>
        <conv:RelativePermissionConverter x:Key="Relpermiss"/>
        <conv:CommentConverter x:Key="comment"/>
        <conv:PlusConverter x:Key="plus"/>
        <conv:KW_Converter x:Key="KW"/>
        <conv:NullZeroToBool x:Key="zerobool"/>
        <conv:IfNullConverter x:Key="IfNull"/>
        <System:Boolean x:Key="TrueValue">True</System:Boolean>
        <System:Boolean x:Key="FalseValue">False</System:Boolean>
        <System:DateTime x:Key="datetime"/>

        <Style x:Key="CellEditStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource MaterialDesignTextBoxBase}">
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Background" Value="LightYellow"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="AcceptsReturn" Value="True"/>
            <Setter Property="IsEnabled">
                <Setter.Value>
                    <MultiBinding Converter="{StaticResource Relpermiss}">
                        <Binding Source="{x:Static const:Permissions.CommentTe}"/>
                        <Binding Path="ArbPlSapNavigation.Ressource.WorkAreaId"/>
                    </MultiBinding>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="DataGridCell">
            <Setter Property="BorderThickness" Value="0"/>
            <Setter Property="Margin" Value="1"/>
            <Setter Property="Padding" Value="2"/>
            <Setter Property="HorizontalAlignment" Value="Center"/>
            <Setter Property="IsHitTestVisible" Value="true"/>

        </Style>

    </UserControl.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="80"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ContextMenu>
            <ContextMenu>
                <MenuItem Header="Drucken" Command="{Binding MachinePrintCommand}"
                             CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}, Path=PlacementTarget.DataContext}">
                    <MenuItem.Icon>
                        <iconpack:BootstrapIcons Kind="Printer"/>
                    </MenuItem.Icon>
                </MenuItem>
            </ContextMenu>
        </Grid.ContextMenu>
        <DockPanel Background="RosyBrown">

            <ListBox x:Name="cost" DockPanel.Dock="Right" VerticalAlignment="Top" ItemsSource="{Binding PlanMachine.CostUnits}"
                     AutomationProperties.LabeledBy="{Binding ElementName=costLabel, Mode=OneWay}">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="ListBoxItem">
                        <Setter Property="Padding" Value="5"/>
                        <Setter Property="Focusable" Value="False"/>
                    </Style> 
                </ListBox.ItemContainerStyle>
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <UniformGrid/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
            </ListBox>
            <Label x:Name="costLabel" Content="Kostenstellen" DockPanel.Dock="Right" VerticalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" >
                <Label.RenderTransform>
                    <TransformGroup>
                        <ScaleTransform/>
                        <SkewTransform/>
                        <RotateTransform Angle="-90"/>
                        <TranslateTransform/>
                    </TransformGroup>
                </Label.RenderTransform>
            </Label>
            <Grid DockPanel.Dock="Left">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="90*" MaxWidth="150"/>
                    <ColumnDefinition Width="100*"/>
                    <ColumnDefinition Width="80*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="50"/>
                    <RowDefinition Height="40"/>
                </Grid.RowDefinitions>
                <StackPanel Orientation="Horizontal" Grid.RowSpan="2">
            <Button
                ToolTip="Drucken" 
                Command="{Binding ApplicationCommands.MachinePrintCommand}"
                CommandParameter="{Binding PlanMachine}"
                Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}">
                    <iconpack:BootstrapIcons Kind="Printer"  Width="30" Height="30"/>
            </Button>
                <Button
                ToolTip="neu berechnen"  Margin="10"
                Command="{Binding PlanMachine.NewCalculateCommand}"
                Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}">
                    <iconpack:BootstrapIcons Kind="CalculatorFill" Width="30" Height="30" />
            </Button>
                </StackPanel>
                <TextBox Text="{Binding PlanMachine.Name}" Grid.Column="1" FontSize="30" FontWeight="SemiBold" Background="Transparent"
                         IsReadOnly="{Binding Converter={StaticResource permiss},ConverterParameter={x:Static const:Permissions.MachRenameInvers}}"/>

                <TextBlock Text="{Binding PlanMachine.InventNo}" Grid.Column="2" FontSize="30" FontWeight="Bold"/>
            <TextBox Text="{Binding PlanMachine.Description}" Grid.Row="1" Grid.Column="1" FontSize="16" Background="Transparent"
                      IsReadOnly="{Binding Converter={StaticResource permiss},ConverterParameter={x:Static const:Permissions.MachRenameInvers}}"/>
            </Grid>
        </DockPanel>
        
        <DataGrid x:Name="MachProcesses" Grid.Row="1" ItemsSource="{Binding PlanMachine.ProcessesCV}" AutoGenerateColumns="False"
                  CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="False" IsSynchronizedWithCurrentItem="True"
                  AlternatingRowBackground="LightGray" CanUserResizeRows="True"
                  dd:DragDrop.IsDragSource="True" 
                  dd:DragDrop.IsDropTarget="True"
                  dd:DragDrop.DragHandler="{Binding}"
                  dd:DragDrop.DropHandler="{Binding}">
            <DataGrid.Resources>
                <Style x:Name="stkStyle" TargetType="TextBlock">
                    <Setter Property="HorizontalAlignment" Value="Center"/>
                </Style>
            </DataGrid.Resources>
            <DataGrid.InputBindings>
                <MouseBinding MouseAction="LeftDoubleClick"
                              Command="{Binding ApplicationCommands.OpenOrderCommand}"
                              CommandParameter="{Binding ElementName=MachProcesses, Path=SelectedValue}"/>
            </DataGrid.InputBindings>
            <DataGrid.ContextMenu>
                <ContextMenu>
                    <ContextMenu.Resources>
                        <Style TargetType="{x:Type MenuItem}" >
                            <Setter Property="CommandParameter" Value="{Binding Path=PlacementTarget.SelectedItem,
                                  RelativeSource={RelativeSource AncestorType={x:Type ContextMenu}}}"/>
                            <Setter Property="Height" Value="30"/>
                        </Style>
                    </ContextMenu.Resources>
                    <ContextMenu.ItemsSource>
                        <CompositeCollection>
                            <CollectionContainer Collection="{StaticResource MachineCm}"/>
                            <CollectionContainer Collection="{StaticResource AppCommandsCm}"/>
                        </CompositeCollection>

                    </ContextMenu.ItemsSource>
                </ContextMenu>
            </DataGrid.ContextMenu>
            <DataGrid.RowStyle>
                <Style TargetType="DataGridRow">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.RowStyle>
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="Transparent"/>
                            <Setter Property="Foreground" Value="Blue"/>
                        </Trigger>
                    </Style.Triggers>
                    <Setter Property="Margin" Value="3"/>
                </Style>
 
            </DataGrid.CellStyle>

            <DataGrid.Columns>
                
                <DataGridTemplateColumn>
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate >
                            <wpfControl:BullettControl BullettColor="{Binding Bullet, TargetNullValue='White'}" 
                                                       Tag="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=DataGrid}}"
                                                       BullettShape="{Binding QuantityYield, Converter={StaticResource BulletShape}}"
                                                       ContextMenu="{StaticResource BulletContextMenu}"/>

                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Auftrag" Binding="{Binding Aid}" IsReadOnly="True" />
                <DataGridTextColumn Header="Vrg" Binding="{Binding Vnr, StringFormat=\{0:D4\}}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Material" IsReadOnly="True">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource IfNull}">
                            <Binding Path="AidNavigation.Material"/>
                            <Binding Path="AidNavigation.DummyMat"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Bezeichnung" IsReadOnly="True">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource IfNull}">
                            <Binding Path="AidNavigation.MaterialNavigation.Bezeichng"/>
                            <Binding Path="AidNavigation.DummyMatNavigation.Mattext"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                </DataGridTextColumn>
                <DataGridTextColumn Header="SpätStart" Binding="{Binding SpaetStart, Converter={StaticResource KW},
                    ConverterParameter=2}" IsReadOnly="True"/>
                <DataGridTextColumn Header="SpätEnd" Binding="{Binding SpaetEnd, Converter={StaticResource KW},
                    ConverterParameter=2}" IsReadOnly="True"/>
                <DataGridTemplateColumn Header="TL-Termin">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>
                            <StackPanel>
                                <DatePicker FirstDayOfWeek="Monday" ToolTip="voraussichtlicher Termin lt. Teamleiter" VerticalAlignment="Top" SnapsToDevicePixels="True"
                                      SelectedDate="{Binding Termin, Mode=TwoWay, NotifyOnTargetUpdated=True, NotifyOnSourceUpdated=True}"
                                      DisplayDate="{Binding Now, Mode=OneWay, Source={StaticResource datetime}}"
                                       SelectedDateChanged="DatePicker_SelectedDateChanged" x:Name="TlTermin">
                                    <DatePicker.IsEnabled>
                                        <MultiBinding Converter="{StaticResource Relpermiss}">
                                            <Binding Source="{x:Static const:Permissions.TLTermin}"/>
                                            <Binding Path="ArbPlSapNavigation.Ressource.WorkAreaId"/>
                                        </MultiBinding>
                                    </DatePicker.IsEnabled>
                                </DatePicker>
                                <TextBlock Text="{Binding Path=SelectedDate, Converter={StaticResource KW}, ElementName=TlTermin}" HorizontalAlignment="Center"/>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Header="Kurztext" Binding="{Binding Text}"  Width="120" IsReadOnly="True">
                    <DataGridTextColumn.ElementStyle>
                        <Style>
                            <Setter Property="TextBlock.TextWrapping" Value="Wrap"/>
                        </Style>
                    </DataGridTextColumn.ElementStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Kommentar" Binding="{Binding CommentMach}" EditingElementStyle="{StaticResource CellEditStyle}"/>
                <DataGridTemplateColumn Header="Bemerkung Teamleiter">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate>

                            <wpfControl:CommentControl CommentString="{Binding BemT, Mode=TwoWay}"
                                                       ContextId="{Binding VorgangId, Mode=OneTime}"
                                                       Blocked="{Binding DataContext.PlanMachine.Focused,
                                                            Mode=OneWayToSource, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                       User="{Binding DataContext.UserIdent, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                                       Width="200">
                                <wpfControl:CommentControl.IsEditable>
                                    <MultiBinding Converter="{StaticResource Relpermiss}">
                                        <Binding Source="{x:Static const:Permissions.CommentTe}"/>
                                        <Binding Path="ArbPlSapNavigation.Ressource.WorkAreaId"/>
                                    </MultiBinding>
                                </wpfControl:CommentControl.IsEditable>
                            </wpfControl:CommentControl>
       
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <!--<DataGridTemplateColumn Header="Bemerkung Teamleiter">
                    <DataGridTemplateColumn.CellTemplate >
                        <DataTemplate>
                             <StackPanel ToolTip="Bemerkung Teamleiter" Width="150" >
                                <TextBlock x:Name="BemTInfo" Text="{Binding BemT, NotifyOnSourceUpdated=True,
                           Converter={StaticResource comment}, ConverterParameter={StaticResource TrueValue}}" Background="Gold"/>

                                <TextBox x:Name="BemTText" Text="{Binding BemT,
                            Converter={StaticResource comment}, ConverterParameter={StaticResource FalseValue}}"                                                
                                                  TextWrapping="Wrap" AcceptsReturn="True" >
                                    <TextBox.IsEnabled>
                                        <MultiBinding Converter="{StaticResource Relpermiss}">
                                            <Binding Source="{x:Static const:Permissions.CommentTe}"/>
                                            <Binding Path="ArbPlSapNavigation.Ressource.WorkAreaId"/>
                                        </MultiBinding>
                                    </TextBox.IsEnabled>
                                </TextBox>
                            </StackPanel>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>-->
                <DataGridTextColumn Header="Mge" Binding="{Binding AidNavigation.Quantity}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Rck" Binding="{Binding QuantityYield}" IsReadOnly="True"/>
                <DataGridTextColumn Header="offen" Binding="{Binding QuantityMiss}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Auss" Binding="{Binding QuantityScrap}" IsReadOnly="True"/>
                <DataGridTextColumn Header="NA" Binding="{Binding QuantityRework}" IsReadOnly="True"/>
                <DataGridTextColumn Header="Dauer" IsReadOnly="True">
                    <DataGridTextColumn.Binding>
                        <MultiBinding Converter="{StaticResource plus}">
                            <Binding Path="Beaze"/>
                            <Binding Path="Rstze"/>
                            <Binding Path="Correction" Mode="OneWay" UpdateSourceTrigger="PropertyChanged"/>
                        </MultiBinding>
                    </DataGridTextColumn.Binding>
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Correction, UpdateSourceTrigger=PropertyChanged,
                                    Converter={StaticResource zerobool}}" Value="{StaticResource FalseValue}">
                                    <Setter Property="Foreground" Value="black"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Correction, UpdateSourceTrigger=PropertyChanged,
                                    Converter={StaticResource zerobool}}" Value="{StaticResource TrueValue}">
                                    <Setter Property="Background" Value="LightGoldenrodYellow"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </DataGridTextColumn.CellStyle>
                </DataGridTextColumn>
                <DataGridTextColumn Header="Ende Berechnet" Binding="{Binding Extends}" IsReadOnly="True">
                    <DataGridTextColumn.CellStyle>
                        <Style TargetType="DataGridCell">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding Alert}" Value="True">
                                    <Setter Property="Foreground" Value="Red"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding Alert}" Value="False">
                                    <Setter Property="Foreground" Value="Black"/>
                                </DataTrigger>
                            </Style.Triggers>
                            <Setter Property="ToolTip" Value="{Binding Formula}"/>
                        </Style>
                    </DataGridTextColumn.CellStyle>
           
                </DataGridTextColumn>
            </DataGrid.Columns>
        </DataGrid>

    </Grid>
</UserControl>
