<Window x:Class="Lieferliste_WPF.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:converter="clr-namespace:Lieferliste_WPF.Converters"
        xmlns:data="clr-namespace:Lieferliste_WPF.DataSetTablesTableAdapters"
        xmlns:loc="clr-namespace:Lieferliste_WPF"
        xmlns:cmd="clr-namespace:Lieferliste_WPF.Commands"
        
        
        xmlns:ad="clr-namespace:AvalonDock;assembly=AvalonDock"
       

        xmlns:ViewModels="clr-namespace:Lieferliste_WPF.ViewModels"
        xmlns:view="clr-namespace:Lieferliste_WPF.UserControls"
        mc:Ignorable="d"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        Title="eL² 4cos" d:DesignHeight="500" d:DesignWidth="1000" Loaded="MainWindow_loaded" WindowState="Maximized">
    
    
    <Grid>
        <Grid.Resources>
            
            <converter:PermissionConverter x: key="permission"/>
            <loc:DataSetEL4  x:Key="dataSet"/>
            <data:tblProjektTableAdapter x:Key="Projects"/>
            <CollectionViewSource x:Key="Unions"/>

            <!-- 
        Data template for displaying tabbed documents.
        This is really simple they are just represented by an AvalonDock
        DocumentContent that contains a simple WPF TextBox.
        -->
            <DataTemplate
            DataType="{x:Type ViewModels:DeliveryListViewModel}"
            >
                <ad:DocumentContent
                    x:Name="delivery"
                    Title="{Binding Title}"      
                    ToolTip="{Binding ToolTip}"
                    IsCloseable="False">
                    

                    <view:LieferlisteView1/>
                </ad:DocumentContent>
            </DataTemplate>

            <!--
        The DataTemplate for the 'Open Documents' pane.
        This uses an AvalonDock DockableContent that contains an instance of the
        OpenDocumentPaneView user control.
        -->
            <DataTemplate
            DataType="{x:Type ViewModels:OpenDocumentsPaneViewModel}"
            >
                <ad:DockableContent
                x:Name="openDocumentsPane"
                Title="Open Documents"
                AvalonDockMVVM:AvalonDockHost.IsPaneVisible="{Binding IsVisible}"
                >
                    <view:OpenDocumentsPaneView />
                </ad:DockableContent>
            </DataTemplate>

            <!-- 
        The DataTemplate for the 'Document Overview' pane.
        This uses an AvalonDock DockableContent that contains an instance of the 
        DocumentOverviewView user control.
        -->
            <DataTemplate
            DataType="{x:Type ViewModels:DocumentOverviewPaneViewModel}"
            >
                <ad:DockableContent
                x:Name="documentOverviewPane"
                Title="Document Overview"
                AvalonDockMVVM:AvalonDockHost.IsPaneVisible="{Binding IsVisible}"
                >
                    <view:DocumentOverviewPaneView />
                </ad:DockableContent>
            </DataTemplate>
        </Grid.Resources>
        
        <Grid.RowDefinitions>
            <RowDefinition Height="50"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="21"/>
        </Grid.RowDefinitions>
            <DockPanel Grid.Row="0" DataContext="{Binding}">

            <Image Name="image1" Stretch="None" HorizontalAlignment="Left" VerticalAlignment="Top" Source="/Lieferliste-WPF;component/Images/Bosch_Anker48.png" StretchDirection="Both" MouseUp="image1_MouseUp" />

            <Menu Height="23" Name="menubar" VerticalAlignment="Top" Margin="2,0" HorizontalAlignment="Left" DockPanel.Dock="Top">
                <MenuItem Header="eL² 4cos" HorizontalAlignment="Left" Padding="2" >
                    <MenuItem Header="Print" Command="ApplicationCommands.Print"/>
        </MenuItem>
                <MenuItem Header="Lieferliste" Click="Show_Lieferlist_Click" />
                <MenuItem Header="Teamleiterfunktionen">
                <MenuItem Header="Maschinenzuteilung" Click="Resource_Division_Click" IsEnabled="{Binding Converter={StaticResource permission}, ConverterParameter=res0010zut}" />
                </MenuItem>
                <MenuItem Header="Hilfe" >
                    <MenuItem Header="About" Click="About_Click"/>

                </MenuItem>

            </Menu>
            <ToolBarTray Height="26">
                <ToolBarTray.Resources>
                    <SolidColorBrush x:Key="brushWatermarkBackground" Color="White" />
                    <SolidColorBrush x:Key="brushWatermarkForeground" Color="LightSteelBlue" />
                    <SolidColorBrush x:Key="brushWatermarkBorder" Color="Indigo" />

                    <BooleanToVisibilityConverter x:Key="BooleanToVisibilityConverter" />
                    <converter:TextInputToVisibilityConverter x:Key="TextInputToVisibilityConverter" />
                    <converter:NullVisibilityConverter x:Key="NullVisibilityConverter"/>
                    <converter:PSP_Converter x:Key="PSP_Converter"/>
                    <Style x:Key="EntryFieldStyle" TargetType="Grid" >
                        <Setter Property="HorizontalAlignment" Value="Stretch" />
                        <Setter Property="VerticalAlignment" Value="Center" />
                        <Setter Property="Margin" Value="2,0" />
                    </Style>
                </ToolBarTray.Resources>
                <ToolBar Band="1" BandIndex="1" Height="26" Name="Toolbar_print">
                    <Button Command="ApplicationCommands.Print" ToolTip="Drucken" >
                        <Image Source="/Lieferliste-WPF;component/Images/print1.png" />
                     </Button>
                </ToolBar>
                <ToolBar Band="1" BandIndex="2" Height="26" Name="ToolBar_search">

                    <Grid Background="{StaticResource brushWatermarkBackground}" Style="{StaticResource EntryFieldStyle}" HorizontalAlignment="Left">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="120" />
                            <ColumnDefinition />
                        </Grid.ColumnDefinitions>
                        <TextBlock Margin="5,2" Text="Suche nach..." Foreground="{StaticResource brushWatermarkForeground}" Name="txtHint" TextAlignment="Center" Grid.Column="0">
                <TextBlock.Visibility>
                    <MultiBinding Converter="{StaticResource TextInputToVisibilityConverter}">
                        <Binding ElementName="txtSearch" Path="Text.IsEmpty" />
                        <Binding ElementName="txtSearch" Path="IsFocused" />
                    </MultiBinding>
                </TextBlock.Visibility>
                        </TextBlock>
                        <TextBox Name="txtSearch" Background="Transparent" BorderBrush="{StaticResource brushWatermarkBorder}" HorizontalAlignment="Left" TextChanged="txtSearch_TextChanged" Width="120" Grid.Column="0" />
                        <ComboBox Height="23" Name="cmbFields" Grid.Column="1" HorizontalAlignment="Left" >
                            <ComboBoxItem Content="alle" IsSelected="True" />
                            <ComboBoxItem Content="TTNR" />
                            <ComboBoxItem Content="Teil" />
                            <ComboBoxItem Content="Auftrag" />
                        </ComboBox>
                    </Grid>              
                </ToolBar>
                <ToolBar Band="1" BandIndex="3" Name="ToolBar_format">

                    <ComboBox Name="cmbFontFamily" Width="120" SelectionChanged="cmbFontFamily_SelectionChanged" ItemsSource="{Binding Source={x:Static Fonts.SystemFontFamilies}}" SelectedIndex="0">
                        <ComboBox.ItemTemplate>
                            <DataTemplate>
                                <Label FontFamily="{Binding .}" Content="{Binding Source}" />
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        </ComboBox>
                    
                    <Separator/>
                    <ToggleButton Command="EditingCommands.ToggleBold" Name="btnBold">
                        <Image Source="/Lieferliste-WPF;component/Images/format_text_bold.png" />
                    </ToggleButton>
                    <ToggleButton Command="EditingCommands.ToggleItalic" Name="btnItalic">
                        <Image Source="/Lieferliste-WPF;component/Images/format_text_italic.png" Width="16" Height="16" />
                    </ToggleButton>
                    <ToggleButton Command="EditingCommands.ToggleUnderline" Name="btnUnderline">
                        <Image Source="/Lieferliste-WPF;component/Images/format_text_underline.png"/>
                    </ToggleButton>
                </ToolBar>
                <ToolBar Band="1" BandIndex="4" Name="ToolBar_filter">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                    
                    <ComboBox Height="23" Name="cmbProj"  Grid.Column="0" MinWidth="120" Margin="0,0,20,0">
                            <ComboBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding Path=., Converter={StaticResource PSP_Converter}}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                            <TextBlock Margin="2,2,40,2" Text="Projekte..." Grid.Column="0"
                               Foreground="{StaticResource brushWatermarkForeground}" 
                               IsHitTestVisible="False" 
                               Visibility="{Binding SelectedItem,ElementName=cmbProj,Converter={StaticResource NullVisibilityConverter}}" Background="White" HorizontalAlignment="Stretch" TextAlignment="Center" />
                        <Button Grid.Column="0" Height="23" HorizontalAlignment="Right" Name="btnClearProj" VerticalAlignment="Top" IsManipulationEnabled="False" Margin="0,3,0,0" Click="btnClearProj_Click">
                            <Image Source="/Lieferliste-WPF;component/Images/eraser.png" Stretch="Uniform" ClipToBounds="True" />
                        </Button>
                            <ComboBox Height="23" Name="cmbKst" Grid.Column="1" MinWidth="120" Margin="0,0,22,0" DisplayMemberPath="Bereich" SelectedValuePath="Bereich"  ItemsSource="{Binding}" SelectionChanged="cmbFilters_SelectionChanged"/>
                        <TextBlock Margin="2,2,40,2" Text="Kostenstellen..." Grid.Column="1"
                               Foreground="{StaticResource brushWatermarkForeground}" 
                               IsHitTestVisible="False" 
                               Visibility="{Binding SelectedItem,ElementName=cmbKst,Converter={StaticResource NullVisibilityConverter}}" Background="White" TextAlignment="Center" />
                        <Button Grid.Column="1" Height="23" HorizontalAlignment="Right" Name="btnClearKst" VerticalAlignment="Top" IsManipulationEnabled="False" BorderThickness="0" Margin="0,3,0,0" Click="btnClearKst_Click">
                            <Image Source="/Lieferliste-WPF;component/Images/eraser.png" Stretch="Uniform" />
                        </Button>
                        <ComboBox Height="23" Name="cmbSpezial" Grid.Column="2" MinWidth="120" Margin="0,0,22,0"  SelectionChanged="cmbFilters_SelectionChanged" >
                            <ComboBoxItem Content="Aufträge zum starten"/>
                            <ComboBoxItem Content="Aufträge zum ablegen"/>
                            <ComboBoxItem Content="Mappe vorhanden"/>
                            <ComboBoxItem Content="Mappe nicht vorhanden"/>                     
                            <ComboBoxItem Content="Dringende Aufträge"/>
                            <ComboBoxItem Content="nicht dringend"/>
                            </ComboBox>
                        <TextBlock Margin="2,2,40,2" Text="Spezial..." Grid.Column="2"
                               Foreground="{StaticResource brushWatermarkForeground}" 
                               IsHitTestVisible="False" 
                               Visibility="{Binding SelectedItem,ElementName=cmbSpezial,Converter={StaticResource NullVisibilityConverter}}" Background="White" TextAlignment="Center" />
                        <Button Grid.Column="2" Height="23" HorizontalAlignment="Right" Name="btnClearSpezial" VerticalAlignment="Top" IsManipulationEnabled="False" BorderThickness="0" Margin="0,3,0,0" Click="btnClearSpezial_Click">
                            <Image Source="/Lieferliste-WPF;component/Images/eraser.png" Stretch="Uniform" />
                        </Button>
                    </Grid>
                </ToolBar>
                <ToolBar Band="1" BandIndex="5" Name="Toolbar_selector" Visibility="Collapsed">
                    <ComboBox Name="cmbUnion" Height="23" ItemsSource="{Binding}" DisplayMemberPath="Bereich" SelectedValuePath="BID" SelectedIndex="0" SelectionChanged="cmbUnion_SelectionChanged">
                        
                    </ComboBox>
                    
                </ToolBar>
                
            </ToolBarTray>

            </DockPanel>
        <!--<TabPanel Grid.Row="1" >
            <TabControl Name="MainTab" ItemsSource="{Binding}" HorizontalContentAlignment="Stretch">
                <TabControl.Resources>
                    <DataTemplate x:Key="TabHeader" DataType="TabItem">
                            
                            <Button Name="btnDelete" DockPanel.Dock="Right" Margin="5,0,0,0" Padding="0" Click="btnDelete_Click" CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=TabIndex}">
                                <Image Source="/Lieferliste-WPF;component/Images/multiply-1.png" Height="11" Width="11"></Image>
                            </Button>
                            <TextBlock Text="{Binding RelativeSource={RelativeSource AncestorType={x:Type TabItem}}, Path=Header}" />
                        </DockPanel>
                    </DataTemplate>
                    
                </TabControl.Resources>
            </TabControl>

        </TabPanel>-->
        <AvalonDockMVVM:AvalonDockHost
            Grid.Row="1"
            x:Name="avalonDockHost"
            Panes="{Binding Panes}"
            Documents="{Binding Documents}"
            ActiveDocument="{Binding ActiveDocument}"
            ActivePane="{Binding ActivePane}"
            AvalonDockLoaded="avalonDockHost_AvalonDockLoaded"
            DocumentClosing="avalonDockHost_DocumentClosing"/>


        <!--<view:Home Panel.ZIndex="0"  Grid.Row="1"/>
        <dock:DockingManager x:Name="dockingManager" Grid.Row="1" Panel.ZIndex="5">
            <ad:LayoutRoot>
                <ad:LayoutPanel>
                    <ad:LayoutDocumentPaneGroup>
                    <ad:LayoutDocumentPane>
                            <ad:LayoutDocument>
                            <view:LieferlisteView1/>
                            </ad:LayoutDocument>
                        </ad:LayoutDocumentPane>
                    </ad:LayoutDocumentPaneGroup>

                    <ad:LayoutAnchorablePaneGroup>
                            <ad:LayoutAnchorablePane>
                                <ad:LayoutAnchorable>

                            
                                <view:OrderView/>
                                

                            </ad:LayoutAnchorable>
                            </ad:LayoutAnchorablePane>
                        </ad:LayoutAnchorablePaneGroup>
                </ad:LayoutPanel>
                
            </ad:LayoutRoot>
        </dock:DockingManager>-->
        <StatusBar Grid.Row="2"  Height="21" Name="statusBar1" VerticalAlignment="Bottom" Margin="0" HorizontalAlignment="Stretch">
            <StatusBarItem Content="FeedBack" />
        </StatusBar>

    </Grid>
</Window>
