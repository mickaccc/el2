<UserControl
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
    xmlns:mah="http://metro.mahapps.com/winfx/xaml/controls"
    xmlns:prism="http://prismlibrary.com/"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:icon="http://metro.mahapps.com/winfx/xaml/iconpacks"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:conv="clr-namespace:El2Core.Converters;assembly=El2Core"
    xmlns:userControls="clr-namespace:ModuleDeliverList.UserControls"
    prism:ViewModelLocator.AutoWireViewModel="True"
    x:Name="LieferListe" Tag="{Binding Title}"
    x:Class="ModuleDeliverList.Views.Liefer"
      mc:Ignorable="d" 
      d:DesignHeight="450" d:DesignWidth="1400">
    <UserControl.Resources>
        <conv:DateConverter x:Key="DateConverter"/>
        <conv:TTNR_Converter x:Key="Ttnr-Converter"/>
        <conv:PermissionConverter x:Key="Permission"/>
        <conv:KW_Converter x:Key="Kw-Converter"/>
        <conv:EnumToCollectionConverter x:Key="EnumConv"/>
        <conv:BooleanToVisibilityConverter x:Key="BoolToVis"/>
        <conv:AlertColorConverter x:Key="boolalert" AlertColor="Red"/>
        <conv:BooleanInverter x:Key="boolInvert"/>
        <conv:ProjectTypeConverter x:Key="proType"/>
        
        <ItemsPanelTemplate x:Key="advancedComboxItemsPanelTemplate">
            <VirtualizingStackPanel Grid.IsSharedSizeScope="True" IsItemsHost="True" />
        </ItemsPanelTemplate>

        <Style x:Key="_ListBoxItemStyle" TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <Border Name="_Border"
                                Padding="2"
                                SnapsToDevicePixels="true">
                            <ContentPresenter />
                        </Border>
                        <ControlTemplate.Triggers>
                            <Trigger Property="IsSelected" Value="true">
                                <Setter TargetName="_Border" Property="Background" Value="LightBlue"/>
                                
                            </Trigger>
                        </ControlTemplate.Triggers>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
    </UserControl.Resources>

    <Grid>

    <Grid.RowDefinitions>
        <RowDefinition Height="50"/>
        <RowDefinition />
    </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="40"/>
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Menu>
            <MenuItem Style="{StaticResource MahApps.Styles.MenuItem}">
                <MenuItem.Header>
                    <icon:Coolicons Kind="HamburgerLg"/>
                </MenuItem.Header>
                <!--<MenuItem Header="Erzeuge PDF" Command="{Binding CreatePdfCommand}"/>-->
                <MenuItem Header="Erzeuge XPS" Command="{Binding CreateRtfCommand}"/>
                <!--<MenuItem Header="Erzeuge HTML" Command="{Binding CreateHtmlCommand}"/>
                    <MenuItem Header="Sende Email" Command="{Binding SendMailCommand}"/>-->
            </MenuItem>
        </Menu>
        <DockPanel Grid.Column="1" LastChildFill="False" HorizontalAlignment="Stretch" >
        <DockPanel.Background>
            <LinearGradientBrush EndPoint="0.5,1" StartPoint="0.5,0">
                <GradientStop Color="#FFB3ADAD"/>
                <GradientStop Color="#FF0B91E6" Offset="1"/>
            </LinearGradientBrush>
        </DockPanel.Background>

        <Button Content="Speichern" DockPanel.Dock="Left" Command="{Binding SaveCommand}" Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}"/>
        <TextBox x:Name="SearchBox"  MinWidth="300" Margin="10,0,0,10" Padding="3" Text="{Binding SearchFilterText, Mode=OneWay}"
                 materialDesign:HintAssist.Hint="suchen in Auftragsnr, TTNR, Materialtext"
                 Style="{StaticResource MaterialDesignFloatingHintTextBox}" Background="{DynamicResource MahApps.Brushes.ThemeBackground}">
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="TextChanged">
                    <i:InvokeCommandAction Command="{Binding TextSearchCommand}" CommandParameter="{Binding Path=Text, ElementName=SearchBox}"/>
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </TextBox>
            <Button Command="{Binding FilterDeleteCommand}" ToolTip="alle Filter rücksetzen" Margin="5" Style="{StaticResource MahApps.Styles.Button.MetroSquare.Accent}">
                <materialDesign:PackIcon Kind="DeleteEmpty" Width="30" />
            </Button>

            <materialDesign:ColorZone DockPanel.Dock="Right"
            FontSize="14"
            FontWeight="Bold"
            Margin="5,1,5,1"
            Mode="Standard"
            materialDesign:HintAssist.FloatingOffset="1,-15" materialDesign:HintAssist.IsFloating="True">

                <StackPanel Orientation="Horizontal">
                    <StackPanel.Resources>
                        <Style x:Key="MyFocusVisual" TargetType="TextBox" >
                            <Style.Triggers>
                                <Trigger Property="IsFocused" Value="True">
                                    <Setter Property="Background" Value="Gold"/>
                                    <Setter Property="Foreground" Value="Black"/>
                                </Trigger>
                            </Style.Triggers>
                            <Setter Property="Background" Value="DimGray"/>
                            <Setter Property="Foreground" Value="White"/>
                        </Style>
                        <Style TargetType="ComboBox" BasedOn="{StaticResource MahApps.Styles.ComboBox}">
                            <Setter Property="Width" Value="200"/>
                            <Setter Property="Padding" Value="8"/>
                        </Style>
                        <Style x:Key="advancedComboboxContainerStyle" TargetType="ComboBoxItem">
                            <Style.Triggers>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="0">
                                    <Setter Property="ItemsControl.Background" Value="White"/>
                                </Trigger>
                                <Trigger Property="ItemsControl.AlternationIndex" Value="1">
                                    <Setter Property="ItemsControl.Background" Value="LightSalmon"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                        <DataTemplate x:Key="advancedComboxItemDataTemplate">
                            <Grid Width="Auto">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="Auto" SharedSizeGroup="A"/>
                                    <ColumnDefinition Width="*"/>
                                    <ColumnDefinition Width="Auto"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Text="{Binding ProjectPsp}"  Grid.Column="0" TextAlignment="Left"/>
                                <TextBlock Text="{Binding ProjectType, Converter={StaticResource proType}}"
                   Margin="5,0,5,0" Grid.Column="1" TextAlignment="Left" Background="{DynamicResource MahApps.Brushes.SystemControlBackgroundChromeMedium}"/>
                                <TextBlock Text="{Binding ProjectInfo}" Grid.Column="2"/>
                            </Grid>
                        </DataTemplate>
                        
                    </StackPanel.Resources>
                    <TextBox x:Name="MarkerCode" MinWidth="40" Style="{DynamicResource MyFocusVisual}" 
                             Text="{Binding MarkerCode, Mode=TwoWay}"/>
                    <ComboBox x:Name="ProjComboBox" Width="250" materialDesign:HintAssist.Hint="Projekte"
                              MaxDropDownHeight="650"
                              AlternationCount="2"
                          ItemsSource="{Binding Projects}"                        
                          SelectedValue="{Binding SelectedProjectFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValuePath="ProjectPsp"
                          ItemTemplate="{StaticResource advancedComboxItemDataTemplate}"
                          ItemsPanel="{StaticResource advancedComboxItemsPanelTemplate}"
                              ItemContainerStyle="{StaticResource advancedComboboxContainerStyle}"/>

                    <ComboBox x:Name="SectionComboBox" materialDesign:HintAssist.Hint="Bereiche"
                          ItemsSource="{Binding Sections}"
                          DisplayMemberPath="Value" 
                          SelectedValue="{Binding SelectedSectionFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedValuePath="Value" VirtualizingPanel.IsVirtualizing="True"
                          ItemsPanel="{StaticResource advancedComboxItemsPanelTemplate}"/>

                    <ComboBox x:Name="PersonalComboBox" materialDesign:HintAssist.Hint="Spezial"
                      ItemsSource="{Binding PersonalFilterKeys}" 
                      SelectedValue="{Binding SelectedPersonalFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      VirtualizingPanel.IsVirtualizing="True"
                      ItemsPanel="{StaticResource advancedComboxItemsPanelTemplate}"/>
                    
                    <ComboBox x:Name="FilterComboBox" materialDesign:HintAssist.Hint="Standard"
                         Background="{Binding FilterInvers, Converter={StaticResource boolalert}}"                                       
                         ItemsSource="{Binding Path=SelectedDefaultFilter, Converter={conv:EnumToCollectionConverter},Mode=OneTime}"
                         SelectedValue="{Binding Path=SelectedDefaultFilter, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                         DisplayMemberPath="Description"
                         SelectedValuePath="Value"
                         ItemsPanel="{StaticResource advancedComboxItemsPanelTemplate}">
                        
                    <ComboBox.ContextMenu>
                        <ContextMenu>
                            <MenuItem Header="Filter umkehren" Command="{Binding ToggleFilterCommand}"/>
                        </ContextMenu>
                    </ComboBox.ContextMenu>
                </ComboBox>

                <TextBlock Text="Anzahl Vorgänge:" 
                  AutomationProperties.LabeledBy="{Binding ElementName=Count, Mode=OneWay}" />
                <TextBlock x:Name="Count"  Width="auto"
                          Text="{Binding Items.Count, ElementName=Lieferlist, Mode=OneWay}" VerticalAlignment="Center" />
            </StackPanel>
        </materialDesign:ColorZone>
    </DockPanel>
    <StackPanel Grid.Row="1" Grid.Column="1">

        <mah:ProgressRing HorizontalAlignment="Center" VerticalAlignment="Center" Margin="50" IsActive="True" Foreground="{DynamicResource ActiveProcess}"
                   Visibility="{Binding OrderTask.IsNotCompleted, Converter={StaticResource BoolToVis}}"/>
        <TextBlock Text="{Binding OrderTask.ErrorMessage}" HorizontalAlignment="Center"
                   Visibility="{Binding OrderTask.IsFaulted, Converter={StaticResource BoolToVis}}"/>
    </StackPanel>

    <ListBox x:Name="Lieferlist" Grid.Row="1" Grid.ColumnSpan="2" Visibility="{Binding OrderTask.IsSuccessfullyCompleted, Converter={StaticResource BoolToVis}}"
                          Background="{DynamicResource {x:Static SystemColors.ControlDarkBrushKey}}"
                          ItemsSource="{Binding OrderTask.Result}"
                          HorizontalContentAlignment="Stretch" Tag="{Binding Path=ItemTemplate, RelativeSource={RelativeSource self}}"
             IsSynchronizedWithCurrentItem="True" ItemContainerStyle="{StaticResource _ListBoxItemStyle}"
             VirtualizingPanel.VirtualizationMode="Recycling">

            <ListBox.ContextMenu>
                <ContextMenu ItemsPanel="{StaticResource advancedComboxItemsPanelTemplate}" VirtualizingPanel.IsVirtualizing="True">
                    <MenuItem Header="Vorgang aus-/einblenden"
                             Command="{Binding InvisibilityCommand}"
                             CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu},Path=PlacementTarget.SelectedItem}"/>
                    <MenuItem Header="Projekt öffnen"
                              Command="{Binding ApplicationCommands.OpenProjectOverViewCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                    <MenuItem Header="Projekt priorisieren" Command="{Binding ProjectPrioCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                    <MenuItem Header="Anhang Dialog" Command="{Binding AttachmentCommand}"
                              CommandParameter="{Binding RelativeSource={RelativeSource AncestorType=ContextMenu}, Path=PlacementTarget.SelectedItem}"/>
                </ContextMenu>
            </ListBox.ContextMenu>
            <ListBox.ItemTemplate>
                <DataTemplate >

                    <userControls:LieferlisteControl x:Name="ucLiefer" GotFocus="ucLiefer_GotFocus"
                                                     
                            Aid="{Binding Aid}"
                            DummyText="{Binding AidNavigation.DummyMatNavigation.Mattext}"
                            MatText="{Binding AidNavigation.MaterialNavigation.Bezeichng}"
                            TTNR="{Binding AidNavigation.Material}"
                            EndDate="{Binding SpaetEnd}"
                            EckEnd="{Binding AidNavigation.Eckende}"
                            LieferTermin="{Binding AidNavigation.LieferTermin, Mode=TwoWay}"
                            Termin="{Binding Termin, Mode=TwoWay,NotifyOnTargetUpdated=True}"
                            Vnr="{Binding Vnr}" 
                            Project="{Binding AidNavigation.ProId}"
                            ProjectInfo="{Binding AidNavigation.Pro.ProjectInfo, Mode=TwoWay}"
                            ProjectPrio="{Binding AidNavigation.Pro.ProjectPrio, Mode=TwoWay}"
                            ProjectAttachmentCount="{Binding AidNavigation.Pro.AttCount}"
                            Quantity="{Binding AidNavigation.Quantity}" 
                            QuantityYield="{Binding QuantityYield,NotifyOnTargetUpdated=True}" 
                            QuantityScrap="{Binding QuantityScrap,NotifyOnTargetUpdated=True}" 
                            QuantityMiss="{Binding QuantityMiss,NotifyOnTargetUpdated=True}"
                            QuantityRework="{Binding QuantityRework, NotifyOnSourceUpdated=True}"
                            VgText="{Binding Text}"
                            WorkArea="{Binding ArbPlSap}"
                            WorkAreaText="{Binding ArbPlSap}"
                            MachineText="{Binding RidNavigation.RessName,NotifyOnTargetUpdated=True}"                                                 
                            Comment_Me="{Binding BemM, Mode=TwoWay,NotifyOnTargetUpdated=False}"
                            Comment_Te="{Binding BemT, Mode=TwoWay,UpdateSourceTrigger=PropertyChanged}"
                            Comment_Ma="{Binding BemMa, Mode=TwoWay,NotifyOnTargetUpdated=True}"
                            PrioText="{Binding AidNavigation.Prio, Mode=TwoWay}"
                            SysStatus="{Binding AidNavigation.SysStatus}"
                            MarkCode="{Binding AidNavigation.MarkCode, Mode=TwoWay}"
                            Doku="{Binding AidNavigation.Mappe, Mode=TwoWay}" 
                            Archivated="{Binding AidNavigation.Abgeschlossen, Mode=OneWay}"
                            AttachmentCount="{Binding AttCount, Mode=OneWay}">

                        </userControls:LieferlisteControl>

                </DataTemplate>
        </ListBox.ItemTemplate>
    </ListBox>
    </Grid>
</UserControl>
